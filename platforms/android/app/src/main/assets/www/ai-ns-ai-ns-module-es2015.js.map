{"version":3,"sources":["./src/app/ai-ns/ai-ns.page.html","./src/app/ai-ns/ai-ns-routing.module.ts","./src/app/ai-ns/ai-ns.module.ts","./src/app/ai-ns/ai-ns.page.scss","./src/app/ai-ns/ai-ns.page.ts","./src/app/model/calve-registration.ts"],"names":[],"mappings":"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","file":"ai-ns-ai-ns-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"success\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: white;\\\" slot=\\\"start\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>AI/NS</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-icon (click)=\\\"logout()\\\" class=\\\"icon-size\\\" name=\\\"log-in-outline\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-label id=\\\"lb\\\">Registration For AI/NS And Calving</ion-label>\\n      <ion-list class=\\\"line-input\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Enter Tag No and press ENTER*: </ion-label>\\n          <ion-input type=\\\"text\\\" [(ngModel)]=\\\"animalTagNumber\\\" numbersOnly\\n            maxlength=\\\"10\\\" (keypress)=\\\"keyPressNumbers($event)\\\" class=\\\"ion-text-right\\\">\\n          </ion-input>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-label id=\\\"lb\\\">Details of </ion-label>\\n      <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" [(ngModel)]=\\\"segment\\\" color=\\\"success\\\">\\n        <ion-segment-button value=\\\"0\\\">\\n          <ion-label>Farmer</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"1\\\">\\n          <ion-label>Animals</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"2\\\">\\n          <ion-label>Pedigree</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </ion-card-header>\\n\\n    <!-- Get farmers detais -->\\n    <ion-card-content *ngIf=\\\"ownerdetails\\\">\\n      <ion-list class=\\\"line-input\\\">\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Farmer's name: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"owner_name\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Village: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"owner_village\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Gewog: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"owner_gewog\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Dzongkhag: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"owner_dzongkhag\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Mobile No: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"mobile_number\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n      </ion-list>\\n    </ion-card-content>\\n\\n    <!-- get animal details -->\\n    <ion-card-content *ngIf=\\\"animadetails\\\">\\n      <ion-list class=\\\"line-input\\\">\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Animal name: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"animalname\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Age: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"animalAge\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sex: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"sex\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Category: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"category\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">CHBPP: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"CHBPP\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Migration: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"migration\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Migration Region: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"migrationRegion\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">BCS: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"bcs\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Housing Type: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"housing_type_option\\\" class=\\\"ion-text-right\\\">\\n          </ion-input>\\n        </ion-item><br>\\n\\n      </ion-list>\\n    </ion-card-content>\\n\\n    <!-- get pedigree information -->\\n    <ion-card-content *ngIf=\\\"pedigreeinformation\\\">\\n      <ion-list class=\\\"line-input\\\">\\n        <ion-item>\\n          <ion-label position=\\\"fixed \\\" class=\\\"ion-text-wrap\\\">DAM No: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"damNumber\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">DAM Name: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"damName\\\" class=\\\"ion-text-right\\\">{{damName}}</ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">DAM Exotic: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"damExotic\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">DAM Breed: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"damBreed\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sire No: </ion-label>\\n          <ion-input [(ngModel)]=\\\"sireNumber\\\" (keypress)=\\\"keyPressNumbers($event)\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sire Name: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"sireName\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sire Exotic: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"sireExotic\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sire Breed: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"sireBreed\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Exotic: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"selfExotic\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n        <ion-item>\\n          <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Breed: </ion-label>\\n          <ion-input readonly [(ngModel)]=\\\"selfBreedType\\\" class=\\\"ion-text-right\\\"></ion-input>\\n        </ion-item><br>\\n\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <!-- if the ai and ns is already done with given tagnumber just update -->\\n  <div *ngIf=\\\"showAiDetails\\\">\\n    <!-- Details of animal breeding -->\\n    <ion-card>\\n\\n      <!-- Ai type breeding for animals -->\\n      <ion-card-header>\\n        <ion-label id=\\\"lb\\\">Details of AI Breeding</ion-label>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-list class=\\\"line-input\\\">\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Semen type: </ion-label>\\n            <ion-input [(ngModel)]=\\\"semenType\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Date of AI: </ion-label>\\n            <ion-input [(ngModel)]=\\\"dateOfAi\\\" displayFormat=\\\"DD-MM-YYYY\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sire Number*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"bullNumber\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Bull Name*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"bullName\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sire Exotic*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"bullExotic\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Breed type*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"bullType\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Technician Name: </ion-label>\\n            <ion-input [(ngModel)]=\\\"technicianName\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">AI Center: </ion-label>\\n            <ion-input [(ngModel)]=\\\"aiCenter\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">AI Technician Type: </ion-label>\\n            <ion-input [(ngModel)]=\\\"technicianType\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Latitude: </ion-label>\\n            <ion-input [(ngModel)]=\\\"latitude\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Longitude: </ion-label>\\n            <ion-input [(ngModel)]=\\\"longitude\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Altitude: </ion-label>\\n            <ion-input [(ngModel)]=\\\"altitude\\\" readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <!-- <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">No of AI done: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br> -->\\n\\n          <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"updateAi()\\\">Update Details</ion-button>\\n\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <!-- if the ai and ns is not done hide animal ai details -->\\n  <div *ngIf=\\\"HideAiDetails\\\">\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-label id=\\\"lb\\\">Select Breeding Type</ion-label>\\n        <ion-segment (ionChange)=\\\"segmentChangedBreedingMethod($event)\\\" [(ngModel)]=\\\"segment1\\\" color=\\\"success\\\">\\n          <ion-segment-button value=\\\"0\\\">\\n            <ion-label>AI</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"1\\\">\\n            <ion-label>NS</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </ion-card-header>\\n\\n      <!-- Ai breeding type for animals -->\\n      <ion-card-content *ngIf=\\\"ai\\\">\\n        <ion-list class=\\\"line-input\\\">\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Semen type:* </ion-label>\\n            <ion-select [(ngModel)]=\\\"p_semenType\\\" class=\\\"owner-type\\\" placeholder=\\\"Semen type\\\">\\n              <ion-select-option *ngFor=\\\"let item of semenTypeList\\\" value=\\\"{{item}}\\\"> {{item}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"stack\\\" class=\\\"ion-text-wrap\\\">Date of AI*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"p_dateOfAi\\\" (ionChange)=\\\"showValidDate(p_dateOfAi)\\\" displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\" class=\\\"ion-text-right\\\">\\n            </ion-input>\\n          </ion-item><br>\\n          <p style=\\\"color: red;\\\">{{errorMessage}}</p>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Sire Number*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"p_bullNumber\\\" (keypress)=\\\"keyPressNumbers($event)\\\"  maxlength=\\\"10\\\" class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Sire Name*: </ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"p_bullName\\\" class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Sire Exotic %*: </ion-label>\\n            <ion-select [(ngModel)]=\\\"p_bullExotic\\\" class=\\\"owner-type\\\" placeholder=\\\"Blood %\\\">\\n              <ion-select-option *ngFor=\\\"let se of exoticList;\\\" value=\\\"{{se.exoticBlood}}\\\">{{se.exoticBlood}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Sire Breed*: </ion-label>\\n            <ion-select [(ngModel)]=\\\"P_bullTypeId\\\" class=\\\"owner-type\\\" placeholder=\\\"Breed Type\\\">\\n              <ion-select-option *ngFor=\\\"let bT of breedTypeList;\\\" value=\\\"{{bT.breedId}}\\\">{{bT.breedType}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Technician Name*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"p_technicianName\\\" class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">AI Center: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{aiCenterDesc}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">AI Technician Type:</ion-label>\\n            <ion-select [(ngModel)]=\\\"p_technicianType\\\" class=\\\"owner-type\\\" placeholder=\\\"Technician Type\\\">\\n              <ion-select-option *ngFor=\\\"let tech of technicianTypeList;\\\" value=\\\"{{tech}}\\\">{{tech}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Gewog*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"p_gewog\\\" readonly class=\\\"ion-text-right\\\">{{gewog}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Village*:</ion-label>\\n            <ion-select [(ngModel)]=\\\"p_village\\\" (ionChange)=\\\"getGeoLocation()\\\" class=\\\"owner-type\\\"\\n              placeholder=\\\"Villages\\\">\\n              <ion-select-option *ngFor=\\\"let vl of villageList;\\\" value=\\\"{{vl.village_Serial_No}}\\\">{{vl.village_Name}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Latitude: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{geoLatitude}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Longitude: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{geoLongitude}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Altitude: </ion-label>\\n            <ion-input [(ngModel)]=\\\"p_altitude\\\" class=\\\"ion-text-right\\\"> </ion-input>\\n          </ion-item><br>\\n\\n          <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"saveAiTypeBreeding()\\\">Save Details</ion-button>\\n\\n        </ion-list>\\n      </ion-card-content>\\n\\n      <!-- NS type breeding for animals -->\\n      <ion-card-content *ngIf=\\\"ns\\\">\\n        <ion-list class=\\\"line-input\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Date of NS: </ion-label>\\n            <ion-input [(ngModel)]=\\\"N_Date\\\" displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\" class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Bull Number: </ion-label>\\n            <ion-input type=\\\"fixed\\\" numbersOnly maxlength=\\\"10\\\" [(ngModel)]=\\\"N_BullNumber\\\" class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Bull Name: </ion-label>\\n            <ion-input type=\\\"fixed\\\" [(ngModel)]=\\\"N_BullName\\\" class=\\\"ion-text-right\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Bull Exotic %</ion-label>\\n            <ion-select [(ngModel)]=\\\"N_BullExotic\\\" class=\\\"owner-type\\\" placeholder=\\\"Blood %\\\">\\n              <ion-select-option *ngFor=\\\"let se of exoticList;\\\" value=\\\"{{se.exoticBlood}}\\\">{{se.exoticBlood}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Bull Breed</ion-label>\\n            <ion-select [(ngModel)]=\\\"N_BullTypeId\\\" class=\\\"owner-type\\\" placeholder=\\\"Breed Type\\\">\\n              <ion-select-option *ngFor=\\\"let bT of breedTypeList;\\\" value=\\\"{{bT.breedId}}\\\">{{bT.breedType}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"saveNsTypeBreeding()\\\">Save Details</ion-button>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <div *ngIf=\\\"showNsdetails\\\">\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-label id=\\\"lb\\\">Details of NS Breeding</ion-label>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-list class=\\\"line-input\\\">\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Bull Number: </ion-label>\\n            <ion-input readonly>{{bullNumber}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Bull Name: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{bullName}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Bull Exotic: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{bullExotic}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Bull Breed: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{bullType}}</ion-input>\\n          </ion-item><br>\\n\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <!-- Status Save -->\\n  <div *ngIf=\\\"statusSave\\\">\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-label id=\\\"lb\\\">Update Status</ion-label>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-list class=\\\"line-input\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Breeding Status*: </ion-label>\\n            <ion-select [(ngModel)]=\\\"model.breeding_Status\\\" class=\\\"owner-type\\\" placeholder=\\\"Status\\\">\\n              <ion-select-option *ngFor=\\\"let item of breedingStatusList\\\" value=\\\"{{item}}\\\">{{item}}</ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">PD Status*: </ion-label>\\n            <ion-select [(ngModel)]=\\\"model.pd_Status\\\" class=\\\"owner-type\\\" placeholder=\\\"Status\\\">\\n              <ion-select-option *ngFor=\\\"let item of pdStatusList\\\" value=\\\"{{item}}\\\">{{item}}</ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Date*: </ion-label>\\n            <ion-input [(ngModel)]=\\\"model.pd_Status_Date\\\" displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\">\\n            </ion-input>\\n          </ion-item><br>\\n\\n          <ion-button color=\\\"success\\\" (click)=\\\"updateBreedingStatusWhenPdstausIsNull()\\\" shape=\\\"round\\\">Update Status\\n          </ion-button>\\n          <!-- <ion-button color=\\\"danger\\\" shape=\\\"round\\\">Exit</ion-button> -->\\n\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <!-- Update status -->\\n  <div *ngIf=\\\"statusUpdate\\\">\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-label id=\\\"lb\\\">Status Details</ion-label>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-list class=\\\"line-input\\\">\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Breeding Status: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{breedingStatus}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">PD Status: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{pdStatus}}</ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Date: </ion-label>\\n            <ion-input readonly class=\\\"ion-text-right\\\">{{pdStausdate}}</ion-input>\\n          </ion-item><br>\\n\\n        </ion-list>\\n\\n        <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"breedinStatusUpdate()\\\">Update</ion-button>\\n\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <!-- //Event update -->\\n  <div>\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-label id=\\\"lb\\\">Event Type</ion-label>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-list class=\\\"line-input\\\">\\n\\n          <!-- Selecting event type from list -->\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Event Type*: </ion-label>\\n            <ion-select class=\\\"owner-type\\\" [(ngModel)]=\\\"modelAiNs.type_Of_Event\\\" (ionChange)=\\\"eventType($event)\\\"\\n              placeholder=\\\"Event type\\\">\\n              <ion-select-option *ngFor=\\\"let item of eventTypeList\\\" value=\\\"{{item}}\\\">{{item}}</ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <!-- normal event for animals -->\\n          <div *ngIf=\\\"normal\\\">\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">Date*: </ion-label>\\n              <ion-input [(ngModel)]=\\\"modelAiNs.date_Of_Pd_Status\\\"  displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\">\\n              </ion-input>\\n            </ion-item><br>\\n\\n            <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"updateEvent(modelAiNs.type_Of_Event)\\\">Save Details\\n            </ion-button>\\n          </div>\\n\\n          <!-- assiste event for animals -->\\n          <div *ngIf=\\\"assist\\\">\\n            <ion-item>\\n              <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Assist Type*: </ion-label>\\n              <ion-select [(ngModel)]=\\\"modelAiNs.type_Of_Assited_Formula\\\" class=\\\"owner-type\\\" placeholder=\\\"Assist type\\\">\\n                <ion-select-option *ngFor=\\\"let item of assistedTypeList\\\" value=\\\"{{item}}\\\">{{item}}</ion-select-option>\\n              </ion-select>\\n            </ion-item><br>\\n\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">Date*: </ion-label>\\n              <ion-input [(ngModel)]=\\\"modelAiNs.date_Of_Pd_Status\\\" displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\">\\n              </ion-input>\\n            </ion-item><br>\\n\\n            <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"updateEvent(modelAiNs.type_Of_Event)\\\">Save Details\\n            </ion-button>\\n\\n          </div>\\n          <!-- still on birth even for animals -->\\n          <div *ngIf=\\\"birth\\\">\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">Date*: </ion-label>\\n              <ion-input [(ngModel)]=\\\"modelAiNs.date_Of_Pd_Status\\\" displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\">\\n              </ion-input>\\n            </ion-item><br>\\n\\n            <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"updateEvent(modelAiNs.type_Of_Event)\\\">Save Details\\n            </ion-button>\\n          </div>\\n\\n          <!-- abortion event for animals -->\\n          <div *ngIf=\\\"abortion\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">Reason for Death*: </ion-label>\\n              <ion-input [(ngModel)]=\\\"modelAiNs.remarks\\\" type=\\\"text\\\">\\n              </ion-input>\\n            </ion-item><br>\\n\\n            <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">Date*: </ion-label>\\n              <ion-input [(ngModel)]=\\\"modelAiNs.date_Of_Pd_Status\\\" displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\">\\n              </ion-input>\\n            </ion-item><br>\\n\\n            <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"updateEvent(modelAiNs.type_Of_Event)\\\">Save Details\\n            </ion-button>\\n          </div>\\n\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n  <!-- show calf regestration for normal and assit type even -->\\n  <div *ngIf=\\\"showCalfRegeistration\\\">\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-label id=\\\"lb\\\">Calve registration</ion-label>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list class=\\\"line-input\\\">\\n\\n          <ion-item>\\n            <ion-label class=\\\"ion-text-wrap\\\">Date of Calving: </ion-label>\\n            <ion-input [(ngMoodel)]=\\\"calf_birth_date\\\" displayFormat=\\\"DD-MM-YYYY\\\" type=\\\"date\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Sex*: </ion-label>\\n            <ion-select class=\\\"owner-type\\\" placeholder=\\\"Assist type\\\" [(ngMoodel)]=\\\"calve_sex\\\">\\n              <ion-select-option value=\\\"male\\\">Male</ion-select-option>\\n              <ion-select-option value=\\\"female\\\">Female</ion-select-option>\\n            </ion-select>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"ion-text-wrap\\\">CalveRegistration No:* </ion-label>\\n            <ion-input [(ngModel)]=\\\"clave_registration_no\\\"></ion-input>\\n          </ion-item><br>\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Exotic:* </ion-label>\\n            <ion-input [(ngModel)]=\\\"calf_exotic\\\" readonly></ion-input>\\n          </ion-item><br>\\n\\n\\n          <ion-item>\\n            <ion-label position=\\\"fixed\\\" class=\\\"ion-text-wrap\\\">Breed Type*: </ion-label>\\n            <ion-select [(ngModel)]=\\\"calf_breed_type\\\" class=\\\"owner-type\\\" placeholder=\\\"breed type\\\">\\n              <ion-select-option *ngFor=\\\"let c of breedTypeList;\\\" value=\\\"{{c.breedId}}\\\">{{c.breedType}}\\n              </ion-select-option>\\n\\n            </ion-select>\\n          </ion-item><br>\\n\\n        </ion-list>\\n        <ion-button color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"registerCalveDetails()\\\">Save Details\\n        </ion-button>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AiNsPage } from './ai-ns.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AiNsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AiNsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AiNsPageRoutingModule } from './ai-ns-routing.module';\n\nimport { AiNsPage } from './ai-ns.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AiNsPageRoutingModule\n  ],\n  declarations: [AiNsPage]\n})\nexport class AiNsPageModule {}\n","export default \"ion-title {\\n  font-size: 15px;\\n}\\n\\nion-toolbar {\\n  background-color: whitesmoke;\\n}\\n\\nion-content {\\n  background-color: whitesmoke;\\n  --offset-bottom: auto!important;\\n  --overflow: hidden;\\n  overflow: auto;\\n}\\n\\nion-content::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.line-input {\\n  margin-bottom: 0 !important;\\n}\\n\\n.line-input ion-item {\\n  --border-color: transparent!important;\\n  --highlight-height: 0;\\n  border: 1px solid #dedede;\\n  border-radius: 4px;\\n}\\n\\n.line-input ion-item.item-has-focus {\\n  border: 1px solid greenyellow;\\n}\\n\\n.line-input ion-item ion-label {\\n  color: black !important;\\n  font-weight: 300;\\n  font-size: 12px !important;\\n}\\n\\nion-input {\\n  font-size: 12px !important;\\n}\\n\\nion-label {\\n  font-weight: bold;\\n}\\n\\nion-card-subtitle {\\n  text-align: center;\\n}\\n\\nion-item {\\n  height: 55px;\\n}\\n\\nion-label#farm-type {\\n  font-size: 13px !important;\\n}\\n\\nion-label {\\n  font-size: 9px;\\n}\\n\\nion-select.owner-type {\\n  font-size: 13px;\\n}\\n\\nion-label#lb {\\n  font-size: 12px !important;\\n}\\n\\n.icon-size {\\n  height: 25px;\\n  width: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWktbnMvRDpcXE9GRklDRVxcUFJPSkVDVFxcRE9MX0RhaXJ5TW9iaWxlQXBwXFxkb2wtZGFpcnktYXBwLW1hc3Rlci9zcmNcXGFwcFxcYWktbnNcXGFpLW5zLnBhZ2Uuc2NzcyIsInNyYy9hcHAvYWktbnMvYWktbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKOztBRENBO0VBQ0ksNEJBQUE7QUNFSjs7QURBQTtFQUNJLDRCQUFBO0VBQ0EsK0JBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUNHSjs7QURGSTtFQUNBLGFBQUE7QUNJSjs7QURBQTtFQUNJLDJCQUFBO0FDR0o7O0FERkk7RUFDSSxxQ0FBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQ0lSOztBREhRO0VBQ0ksNkJBQUE7QUNLWjs7QURIUTtFQUNJLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSwwQkFBQTtBQ0taOztBRERBO0VBQ0ksMEJBQUE7QUNJSjs7QURGQTtFQUNJLGlCQUFBO0FDS0o7O0FERkE7RUFDSSxrQkFBQTtBQ0tKOztBREZBO0VBQ0ksWUFBQTtBQ0tKOztBREZBO0VBQ0ksMEJBQUE7QUNLSjs7QURGQTtFQUNJLGNBQUE7QUNLSjs7QURIQTtFQUNRLGVBQUE7QUNNUjs7QURKQTtFQUNJLDBCQUFBO0FDT0o7O0FESkE7RUFDSSxZQUFBO0VBQ0EsV0FBQTtBQ09KIiwiZmlsZSI6InNyYy9hcHAvYWktbnMvYWktbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXRpdGxle1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59XHJcbmlvbi10b29sYmFye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcclxufVxyXG5pb24tY29udGVudHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAtLW9mZnNldC1ib3R0b206IGF1dG8haW1wb3J0YW50O1xyXG4gICAgLS1vdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubGluZS1pbnB1dCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwIWltcG9ydGFudDtcclxuICAgIGlvbi1pdGVtIHtcclxuICAgICAgICAtLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQhaW1wb3J0YW50O1xyXG4gICAgICAgIC0taGlnaGxpZ2h0LWhlaWdodDogMDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGVkZWRlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgICAgICAmLml0ZW0taGFzLWZvY3VzIHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW55ZWxsb3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlvbi1sYWJlbCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBibGFjayFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweCFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmlvbi1pbnB1dHtcclxuICAgIGZvbnQtc2l6ZTogMTJweCFpbXBvcnRhbnQ7XHJcbn1cclxuaW9uLWxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5pb24tY2FyZC1zdWJ0aXRsZXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaW9uLWl0ZW17XHJcbiAgICBoZWlnaHQ6IDU1cHg7XHJcbn1cclxuXHJcbmlvbi1sYWJlbCNmYXJtLXR5cGV7XHJcbiAgICBmb250LXNpemU6IDEzcHghaW1wb3J0YW50O1xyXG59XHJcblxyXG5pb24tbGFiZWx7XHJcbiAgICBmb250LXNpemU6IDlweDtcclxufVxyXG5pb24tc2VsZWN0Lm93bmVyLXR5cGV7XHJcbiAgICAgICAgZm9udC1zaXplOiAxM3B4OyAvL3NldHMgcGxhY2Vob2xkZXIgZm9udCBzaXplXHJcbn1cclxuaW9uLWxhYmVsI2xie1xyXG4gICAgZm9udC1zaXplOiAxMnB4IWltcG9ydGFudDtcclxufVxyXG5cclxuLmljb24tc2l6ZXtcclxuICAgIGhlaWdodDogMjVweDtcclxuICAgIHdpZHRoOiAyNXB4O1xyXG59XHJcblxyXG4iLCJpb24tdGl0bGUge1xuICBmb250LXNpemU6IDE1cHg7XG59XG5cbmlvbi10b29sYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbn1cblxuaW9uLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAtLW9mZnNldC1ib3R0b206IGF1dG8haW1wb3J0YW50O1xuICAtLW92ZXJmbG93OiBoaWRkZW47XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuaW9uLWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmxpbmUtaW5wdXQge1xuICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG4ubGluZS1pbnB1dCBpb24taXRlbSB7XG4gIC0tYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCFpbXBvcnRhbnQ7XG4gIC0taGlnaGxpZ2h0LWhlaWdodDogMDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZGVkZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuLmxpbmUtaW5wdXQgaW9uLWl0ZW0uaXRlbS1oYXMtZm9jdXMge1xuICBib3JkZXI6IDFweCBzb2xpZCBncmVlbnllbGxvdztcbn1cbi5saW5lLWlucHV0IGlvbi1pdGVtIGlvbi1sYWJlbCB7XG4gIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcbn1cblxuaW9uLWlucHV0IHtcbiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5pb24tY2FyZC1zdWJ0aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWl0ZW0ge1xuICBoZWlnaHQ6IDU1cHg7XG59XG5cbmlvbi1sYWJlbCNmYXJtLXR5cGUge1xuICBmb250LXNpemU6IDEzcHggIWltcG9ydGFudDtcbn1cblxuaW9uLWxhYmVsIHtcbiAgZm9udC1zaXplOiA5cHg7XG59XG5cbmlvbi1zZWxlY3Qub3duZXItdHlwZSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cblxuaW9uLWxhYmVsI2xiIHtcbiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi5pY29uLXNpemUge1xuICBoZWlnaHQ6IDI1cHg7XG4gIHdpZHRoOiAyNXB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { AlertController } from '@ionic/angular';\nimport { AinsDetails } from '../model/ains-details';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderOptions, NativeGeocoderResult } from '@ionic-native/native-geocoder/ngx';\nimport { BreedingStatus } from '../model/breeding-status';\nimport { CalveRegistration } from '../model/calve-registration';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-ai-ns',\n  templateUrl: './ai-ns.page.html',\n  styleUrls: ['./ai-ns.page.scss'],\n})\n\n\nexport class AiNsPage implements OnInit {\n  pipe = new DatePipe('en-US');\n  currentUser: string;\n  semenTypeList: Array<String>;\n  exoticList: Object;\n  breedTypeList: Object;\n  villageList: Object;\n  aiCenterDesc: string;\n  aiCenterId: number;\n  technicianTypeList: Array<String>;\n  breedingStatusList: Array<string>;\n  pdStatusList: Array<string>;\n  eventTypeList: Array<string>;\n  assistedTypeList: Array<string>;\n\n  segment = 0;\n  segment1 = 0;\n\n  ownerdetails: boolean = true;\n  animadetails: boolean = false;\n  pedigreeinformation: boolean = false;\n\n  model: BreedingStatus;\n  modelAiNs: AinsDetails;\n\n  numberOfAi: number;\n  //List of variables used for AI type breeding \n  animalBreedType: String;\n  HideAiDetails: boolean = true;\n  showAiDetails: boolean = false;\n  showNsdetails: boolean = false;\n\n  //variable used to show status update and hide status update\n  statusSave: boolean = true;\n  statusUpdate: boolean = false;\n\n  //Event type variable\n  normal: boolean = false;\n  assist: boolean = false;\n  birth: boolean = false;\n  abortion: boolean = false;\n  showCalfRegeistration: boolean = false;\n\n  //List of variable to get details of owner, pedegree information, and animal details\n  cid_number: string;\n  nlhd_Number: string;\n  owner_name: string;\n  owner_village: string;\n  owner_gewog: string;\n  owner_dzongkhag: string;\n  animalTagNumber: string = \"\";\n  damNumber: string;\n  damExotic: number;\n  damName: string;\n  sireNumber: String;\n  sireName: String;\n  sireExotic: number;\n  housing_type_option: String;\n  animalname: String;\n  mobile_number: String;\n  animalAge: number;\n  migration: String;\n  migrationRegion: String;\n  sex: string;\n  category: string;\n  bcs: number;\n  damBreedId: number;\n  damBreed: String;\n  sireBreedId: number;\n  sireBreed: String;\n  selfExotic:number;\n  selfBreedId: number;\n  selfBreedType: string;\n  CHBPP: String;\n\n  //Lidt of variables to get information about Animal artificial insemination\n  semenType: string;\n  dateOfAi: Date;\n  techniqueName: string;\n  bullNumber: string;\n  bullName: string;\n  bullExotic: number;\n  bullType: string;\n  bullTypeId: number;\n  technicianName: string;\n  aiCenter: string;\n  technicianType: string;\n  gewog: string;\n  gewogId: number;\n  village: string;\n  longitude: number;\n  latitude: number;\n  altitude: number;\n  numberOfAiDone: number;\n\n  //List of variables to post the AI details of animals\n  p_semenType: string;\n  p_dateOfAi: Date;\n  p_bullNumber: string;\n  p_bullName: string;\n  p_bullExotic: number;\n  P_bullTypeId: number;\n  p_technicianName: string;\n  p_technique: string = \"AI\";\n  p_technicianType: string;\n  p_gewogId: number;\n  p_village: string;\n  p_altitude: number;\n\n  //List of the varailes to post the NS details of animals\n  N_Date: Date;\n  N_BullNumber: string;\n  N_BullName: string;\n  N_BullExotic: number;\n  N_BullTypeId: number;\n  N_TechniqueType: string = \"NS\";\n\n  //List of varaible to get animal breeding status;\n  breedingStatus: string;\n  pdStatus: string = null;\n  pdStausdate: Date;\n\n  //List of variable for Calve registration\n  clave_registration_no: string;\n  calve_name: string;\n  calf_birth_date: Date;\n  calve_age: number;\n  calve_sex: string;\n  calf_breed_type: number;\n  calf_exotic: number;\n\n  // // Readable Address\n  address: string;\n\n  geoLatitude: number;\n  geoLongitude: number;\n  geoAltitude: number;\n\n  ai: boolean = true;\n  ns: boolean = false;\n\n  claveModel:CalveRegistration;\n\n  //Validation variable\n  successmessage: any;\n  errorMessage: any;\n\n\n  constructor(\n    private apiService: ApiService,\n    private storage: Storage,\n    private router: Router,\n    private alertCtrl: AlertController,\n    private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder\n  ) {\n    this.modelAiNs = new AinsDetails();\n    this.model = new BreedingStatus();\n    this.claveModel = new CalveRegistration();\n  }\n\n  ngOnInit() {\n    this.getBreedType();\n    this.optionsForSelect();\n    this.getExoticBloodPercent();\n    this.getUserLocationWhileLoggingIn();\n  }\n\n  showValidDate(p_dateOfAi){\n    var currentDate = this.pipe.transform( Date.now(), 'yyyy-MM-dd');\n    if(p_dateOfAi <= currentDate){\n      this.errorMessage = \"\";\n      return this.p_dateOfAi;\n    } else {\n      this.errorMessage = \"Please enter valid date\";\n    }\n  }\n\n\n  keyPressNumbers(event) {\n    var charCode = (event.which) ? event.which : event.keyCode;\n    // Only Numbers 0-9\n    if ((charCode < 48 || charCode > 57)) {\n      event.preventDefault();\n      this.fetchFarmerOrFarmNameAnimalPedigreeDetailsFromTagNumber();\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  //Getting user location while user is loggedin\n  getUserLocationWhileLoggingIn() {\n    this.currentUser = sessionStorage.getItem(\"presentUser\");\n    console.log(\"User name is:\", this.currentUser);\n\n    this.apiService.getUserLocation().subscribe(response => {\n      console.log(\"Response:\", response);\n      for (let i = 0; i < response.length; i++) {\n        if (this.currentUser === response[i].userName) {\n          this.gewog = response[i].user_location_name;\n          this.gewogId = response[i].user_location_id;\n          this.getAllVillagesList(this.gewogId);\n        }\n      }\n    })\n  }\n\n  optionsForSelect() {\n    this.semenTypeList =\n      [\n        \"Sex sorted Semen Inventory( Imported)\",\n        \"Conventional frozen Semen Inventory(Imported)\",\n        \"Progeny Tested Semen-Yusipang\"\n      ],\n      this.technicianTypeList =\n      [\n        \"Govt AIT\",\n        \"Community AIT\"\n      ],\n      this.breedingStatusList =\n      [\n        \"Repeated\",\n        \"Not Repeated\"\n      ],\n\n      this.pdStatusList =\n      [\n        \"Positive\",\n        \"Negative\"\n      ],\n      this.eventTypeList =\n      [\n        \"Normal\",\n        \"Assisted\",\n        \"Still birth\",\n        \"Abortion\"\n      ],\n\n      this.assistedTypeList =\n      [\n        \"Caesarean\",\n        \"Corrective Measure\"\n      ]\n\n  }\n\n\n  //To navigate between the tabs of owner details, animal details and pedigree ionformation\n  segmentChanged(event) {\n    if (this.segment == 0) {\n      this.ownerdetails = true;\n      this.animadetails = false;\n      this.pedigreeinformation = false;\n    } else if (this.segment == 1) {\n      this.ownerdetails = false;\n      this.animadetails = true;\n      this.pedigreeinformation = false;\n    } else {\n      this.ownerdetails = false;\n      this.animadetails = false;\n      this.pedigreeinformation = true;\n    }\n\n  }\n\n  //To navigate between the tab of the AI and NS\n  segmentChangedBreedingMethod(event) {\n    if (this.segment1 == 0) {\n      this.ai = true;\n      this.ns = false;\n    } else {\n      this.ai = false;\n      this.ns = true;\n    }\n  }\n\n\n\n  //Fetch farmer or farm name, animal details and pedigree information by animal tagg number\n  fetchFarmerOrFarmNameAnimalPedigreeDetailsFromTagNumber() {\n    this.apiService.fetchFarmerOrFarmNameAnimalPedigreeDetailsFromTagNumber().subscribe(response => {\n      for (let i = 0; i < response.length; i++) {\n        if (this.animalTagNumber === response[i].animalTagNumber) {\n          this.cid_number = response[i].cid_number;\n          this.nlhd_Number = response[i].nlhd_Number;\n          this.owner_name = response[i].farmOrFarmerName;\n          this.owner_village = response[i].village;\n          this.owner_gewog = response[i].gewog;\n          this.owner_dzongkhag = response[i].dzongkhag;\n          this.mobile_number = response[i].mobileNumber;\n          this.animalname = response[i].animalName;\n          this.animalAge = response[i].animalAge;\n          this.sex = response[i].animalSex;\n          this.category = response[i].animalCategory;\n          this.CHBPP = response[i].chbpp;\n          this.migration = response[i].migration;\n          this.migrationRegion = response[i].migrationRegion;\n          this.bcs = response[i].bcs;\n          this.housing_type_option = response[i].housingType;\n          this.damNumber = response[i].damNumber;\n          this.damName = response[i].damName;\n          this.damExotic = response[i].damExotic;\n          this.damBreed = response[i].damBreedJoin.breedType;\n          this.sireNumber = response[i].sireNumber;\n          this.sireName = response[i].sireName;\n          this.sireExotic = response[i].sireExotic;\n          this.sireBreed = response[i].sireBreedJoin.breedType;\n          this.selfExotic = response[i].exotic_Blood_Percent;\n          this.selfBreedType = response[i].selfBreedType.breedType;\n          this.selfBreedId = response[i].selfBreedType.breedId;\n          this.getArtificialInseminationDetailsById();\n          this.getAnimalBreedingStatus();\n          break;\n        } else {\n          \n          // this.errorMessage = \"Please provide valid animal tag number\";\n          // this.alerFailed();\n        }\n      }\n    });\n  }\n\n  //get all animal breeding Status\n  getAnimalBreedingStatus() {\n    this.apiService.getAmimalBreedingStatus().subscribe((response) => {\n      for (let i = 0; i < response.length; i++) {\n        if (this.animalTagNumber === response[i].animal_Tag_Number && this.pdStatus === response[i].pd_Status) {\n          this.statusSave = true;\n          this.statusUpdate = false;\n          break;\n        } else if (this.animalTagNumber === response[i].animal_Tag_Number && response[i].pd_Status != \"\") {\n          this.statusSave = false;\n          this.statusUpdate = true;\n          this.breedingStatus = response[i].breeding_Status;\n          this.pdStatus = response[i].pd_Status;\n          this.pdStausdate = response[i].pd_Status_Date;\n          break;\n        } else {\n          this.statusSave = false;\n          this.statusUpdate = false;\n        }\n      }\n    });\n  }\n\n  //get artificial insemination details by id\n  getArtificialInseminationDetailsById() {\n    this.apiService.getArtificialInseminationDetails().subscribe((response) => {\n      for (let i = 0; i < response.length; i++) {\n        if (this.animalTagNumber === response[i].animal_Tag_Number && this.p_technique === response[i].technique_Name) {\n          this.semenType = response[i].semen_Type;\n          this.dateOfAi = response[i].date_Of_Event;\n          this.bullNumber = response[i].bull_Number;\n          this.bullName = response[i].bull_Name;\n          this.bullExotic = response[i].bull_Exotic;\n          this.bullType = response[i].breed.breedType;\n          this.bullTypeId = response[i].breed.breedId;\n          this.technicianName = response[i].technician_Name;\n          this.aiCenter = response[i].aicenter.ai_Center_Desc;\n          this.technicianType = response[i].ai_Technician_Type;\n          this.longitude = response[i].longitude;\n          this.latitude = response[i].latitude;\n          this.altitude = this.longitude + this.latitude;\n          this.HideAiDetails = false;\n          this.showAiDetails = true;\n          this.showNsdetails = false;\n          break;\n        } else if (this.animalTagNumber === response[i].animal_Tag_Number && this.N_TechniqueType === response[i].technique_Name) {\n          this.dateOfAi = response[i].date_Of_Event;\n          this.bullNumber = response[i].bull_Number;\n          this.bullName = response[i].bull_Name;\n          this.bullExotic = response[i].bull_Exotic;\n          this.bullType = response[i].breed.breedType;\n          this.bullTypeId = response[i].breed.breedId;\n          this.technicianType = response[i].ai_Technician_Type;\n          this.HideAiDetails = false;\n          this.showAiDetails = false;\n          this.showNsdetails = true;\n          break;\n        } else {\n          this.HideAiDetails = true;\n          this.showAiDetails = false;\n          this.showNsdetails = false;\n        }\n      }\n    });\n  }\n\n  //Update Ai Details\n  async updateAi() {\n    if (this.animalTagNumber != null) {\n      this.storage.set(\"taggNumber\", this.animalTagNumber);\n      this.router.navigate(['ai-update']);\n    } else {\n      this.failedAlert();\n    }\n  }\n\n  //Update animal breeding status\n  async breedinStatusUpdate() {\n    if (this.animalTagNumber != null) {\n      this.storage.set(\"taggNumber\", this.animalTagNumber);\n      this.router.navigate(['update-breeding-status']);\n    } else {\n      this.failedAlert();\n    }\n  }\n\n  //Update breedingg status if pd status is null\n  updateBreedingStatusWhenPdstausIsNull() {\n    this.apiService.updateBreedingStatus(this.animalTagNumber, this.model).subscribe(response => {\n      this.alertBreedingStatusSuccess();\n    })\n  }\n\n  //get exotic blood percent of dam and sire\n  getExoticBloodPercent() {\n    this.apiService.getExoticBloodPercent().subscribe((response) => {\n      this.exoticList = response;\n    });\n  }\n\n  //get all breed type\n  getBreedType() {\n    this.apiService.getBreedType().subscribe((response) => {\n      this.breedTypeList = response;\n    });\n  }\n\n  //get all village\n  getAllVillagesList(gewogId) {\n    this.apiService.getVillageListFromGewogLookup(gewogId).subscribe((response) => {\n      this.villageList = response.villageJoin;\n      this.aiCenterDesc = response.aiCenterJoin[0].ai_Center_Desc;\n      this.aiCenterId = response.aiCenterJoin[0].ai_Center_Id;\n    });\n  }\n\n\n  // //Geocoder configuration\n  geoencoderOptions: NativeGeocoderOptions = {\n    useLocale: true,\n    maxResults: 5\n  };\n\n  //Get current coordinates of device\n  getGeoLocation() {\n    this.geolocation.getCurrentPosition().then((position) => {\n      this.geoLatitude = position.coords.latitude;\n      this.geoLongitude = position.coords.longitude;\n      this.geoAltitude = position.coords.altitude;\n      this.getGeoencoder(position.coords.latitude, position.coords.longitude);\n    });\n  }\n\n  //geocoder method to fetch address from coordinates passed as arguments\n  getGeoencoder(geoLatitude, geoLongitude) {\n    this.nativeGeocoder.reverseGeocode(geoLatitude, geoLongitude, this.geoencoderOptions)\n      .then((result: NativeGeocoderResult[]) => {\n        this.address = this.generateAddress(result[0]);\n      })\n      .catch((error: any) => {\n        console.log('Error getting location' + JSON.stringify(error));\n      });\n  }\n\n\n  //Return Comma saperated address\n  generateAddress(addressObj) {\n    let obj = [];\n    let address = \"\";\n    for (let key in addressObj) {\n      obj.push(addressObj[key]);\n    }\n    obj.reverse();\n    for (let val in obj) {\n      if (obj[val].length)\n        address += obj[val] + ', ';\n    }\n    return address.slice(0, -2);\n  }\n\n  //Save AI type breeding for animals\n  saveAiTypeBreeding() {\n    this.modelAiNs.animal_Tag_Number = this.animalTagNumber;\n    this.modelAiNs.semen_Type = this.p_semenType;\n    this.modelAiNs.ai_Technician_Type = this.p_technicianType;\n    this.modelAiNs.technique_Name = this.p_technique;\n    this.modelAiNs.date_Of_Event = this.p_dateOfAi;\n    this.modelAiNs.bull_Number = this.p_bullNumber;\n    this.modelAiNs.bull_Name = this.p_bullName;\n    this.modelAiNs.bull_Exotic = this.p_bullExotic;\n    this.modelAiNs.bull_Breed_Type_Id = this.P_bullTypeId;\n    this.modelAiNs.technician_Name = this.p_technicianName;\n    this.modelAiNs.ai_Center_Id = this.aiCenterId;\n    this.modelAiNs.user_Gewog_Id = this.gewogId;\n    this.modelAiNs.latitude = this.geoLatitude;\n    this.modelAiNs.longitude = this.geoLongitude;\n    this.modelAiNs.altitude = this.p_altitude;\n\n    if(this.animalTagNumber != \"\" && this.p_semenType != \"\" && this.p_technique != \"\" && this.p_dateOfAi != null &&\n    this.p_bullNumber != \"\" && this.p_bullExotic != 0 && this.P_bullTypeId != 0 && this.p_technicianName != \"\" && \n    this.aiCenterId != 0 && this.gewogId != 0){\n\n      this.apiService.saveAiAndNSTypeBreeding(this.modelAiNs).subscribe((response) => {\n        this.alertSaveSuccesss();\n      });\n\n    } else {\n      this.errorMessage = \"Please fill all the required field\";\n      this.alerFailed();\n    }\n    \n  }\n\n\n  //Save NS type breeding for animals\n  saveNsTypeBreeding() {\n\n    this.modelAiNs.animal_Tag_Number = this.animalTagNumber;\n    this.modelAiNs.technique_Name = this.N_TechniqueType;\n    this.modelAiNs.date_Of_Event = this.N_Date;\n    this.modelAiNs.bull_Number = this.N_BullNumber;\n    this.modelAiNs.bull_Name = this.N_BullName;\n    this.modelAiNs.bull_Exotic = this.N_BullExotic;\n    this.modelAiNs.bull_Breed_Type_Id = this.N_BullTypeId;\n\n    if(this.animalTagNumber != \"\" && this.N_TechniqueType != \"\" && this.N_Date != null && this.N_BullNumber != \"\" &&\n    this.N_BullName != \"\" && this.N_BullExotic != 0 && this.N_BullTypeId != 0){\n      this.apiService.saveAiAndNSTypeBreeding(this.modelAiNs).subscribe((response) => {\n        this.alertSaveSuccesss();\n      })\n    } else {\n      this.errorMessage = \"Please provide all the required values\";\n      this.alerFailed();\n    }\n  }\n\n  //Selecting event type for animal\n  eventType($event) {\n    var item = $event.detail.value;\n    if (item === \"Normal\") {\n      this.normal = true;\n      this.assist = false;\n      this.birth = false;\n      this.abortion = false;\n    } else if (item === \"Assisted\") {\n      this.normal = false;\n      this.assist = true;\n      this.birth = false;\n      this.abortion = false;\n    } else if (item === \"Still birth\") {\n      this.normal = false;\n      this.assist = false;\n      this.birth = true;\n      this.abortion = false;\n    } else {\n      this.normal = false;\n      this.assist = false;\n      this.birth = false;\n      this.abortion = true;\n    }\n  }\n\n  //normal event update\n  updateEvent(eventType) {\n    if (this.animalTagNumber != \"\" && (eventType === \"Normal\" || eventType === \"Assisted\")) {\n      this.apiService.eventUpdate(this.animalTagNumber, this.modelAiNs).subscribe(response => {\n        this.evntUpdateSuccesss();\n        this.calf_exotic = (this.selfExotic+this.bullExotic)/2 \n        this.showCalfRegeistration = true;\n      });\n    } else if (this.animalTagNumber != \"\" && (eventType === \"Still birth\" || eventType === \"Abortion\")) {\n      this.apiService.eventUpdate(this.animalTagNumber, this.modelAiNs).subscribe(response => {\n        this.evntUpdateSuccesss();\n        this.showCalfRegeistration = false;\n      });\n    } else {\n      this.showCalfRegeistration = false;\n    }\n  }\n\n//Register new calve\n  registerCalveDetails(){\n    debugger;\n    this.claveModel.animalRegistrationNumber = this.clave_registration_no;\n    this.claveModel.cid_number = this.cid_number;\n    this.claveModel.nlhd_Number = this.nlhd_Number;\n    this.claveModel.owner_name = this.owner_name;\n    this.claveModel.owner_village = this.owner_village;\n    this.claveModel.owner_gewog = this.owner_gewog;\n    this.claveModel.owner_dzongkhag = this.owner_dzongkhag;\n    this.claveModel.damNumber = this.animalTagNumber;\n    this.claveModel.damExotic = this.selfExotic;\n    this.claveModel.damName = this.animalname;\n    this.claveModel.sireNumber = this.bullNumber;\n    this.claveModel.sireName = this.bullName;\n    this.claveModel.sireExotic = this.bullExotic;\n    this.claveModel.housing_type_option = this.housing_type_option = \"\";\n    this.claveModel.animalname = this.calve_name;\n    this.claveModel.mobile_number = this.mobile_number;\n    this.claveModel.birthdate = this.calf_birth_date;\n    this.claveModel.animalAge = this.calve_age;\n    this.claveModel.migration = this.migration = \"\";\n    this.claveModel.migrationRegion = this.migrationRegion = \"\";\n    this.claveModel.sex = this.calve_sex;\n    this.claveModel.category = this.category = \"Calve\";\n    this.claveModel.bcs = this.bcs = 0;\n    this.claveModel.damBreedId = this.selfBreedId;\n    this.claveModel.sireBreedId = this.bullTypeId;\n    this.claveModel.CHBPP = this.CHBPP = \"\";\n    this.claveModel.animalBreedType = this.calf_breed_type;;\n    this.claveModel.animalExotic = this.calf_exotic;\n\n    if(this.clave_registration_no != \"\" && this.calve_sex != \"\" && this.calf_birth_date != null){\n      this.apiService.registerCalveDetails(this.claveModel).subscribe((response) => {\n        //console.log(\"Saved successfully\");\n        this.successmessage = \"Calve registred successfully\";\n        this.alerSuccessful();\n      });\n    } else {\n      this.errorMessage = \"Please provide all the required details\";\n    }\n  }\n\n  // ********************all alert message here****************\n  //Failed alert\n  async failedAlert() {\n    const alert = await this.alertCtrl.create({\n      header: 'Failed',\n      message: \"Please provide animal tag number\",\n      buttons: [\n        {\n          text: 'Ok'\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  //Alert Controller to show animal details saving\n  async alertSaveSuccesss() {\n    const alert = await this.alertCtrl.create({\n      message: 'Animal sucessfully saved for AI: ',\n      buttons: ['OK']\n    });\n    await alert.present();\n    const result = await alert.onDidDismiss();\n    console.log(result);\n  }\n\n  //Show alert for successful breeding status update\n  async alertBreedingStatusSuccess() {\n    const alert = await this.alertCtrl.create({\n      message: 'Status saved successfully ',\n      buttons: ['OK']\n    });\n    await alert.present();\n    const result = await alert.onDidDismiss();\n    console.log(result);\n  }\n\n  //Alert Controller to show animal details saving\n  async evntUpdateSuccesss() {\n    const alert = await this.alertCtrl.create({\n      message: 'Successfull updated event',\n      buttons: ['OK']\n    });\n    await alert.present();\n    const result = await alert.onDidDismiss();\n    console.log(result);\n  }\n\n  //Alert Controller to show sussess\nasync alerSuccessful() {\n  const alert = await this.alertCtrl.create({\n    message: this.successmessage ,\n    buttons: ['OK']\n  });\n  await alert.present();\n  const result = await alert.onDidDismiss();\n  console.log(result);\n}\n\nasync alerFailed() {\n  const alert = await this.alertCtrl.create({\n    message: this.errorMessage,\n    buttons: ['OK']\n  });\n  await alert.present();\n  const result = await alert.onDidDismiss();\n  console.log(result);\n}\n\n\n\nlogout() {\n  this.router.navigate(['home']);\n  sessionStorage.clear();\n}\n\n}\n\n\n\n\n\n\n","export class CalveRegistration {\n    animalRegistrationNumber:String;\n    cid_number:string;\n    nlhd_Number:string;\n    owner_name:string;\n    owner_village:string;\n    owner_gewog:string;\n    owner_dzongkhag:string;\n    damNumber:String;\n    damExotic:number;\n    damName:String;\n    sireNumber:String;\n    sireName:String;\n    sireExotic:number;\n    housing_type_option:String;\n    animalname:String;\n    mobile_number:String;\n    birthdate:Date;\n    animalAge:number;\n    migration:String;\n    migrationRegion:String;\n    sex:string;\n    category:string;\n    bcs:number;\n    damBreed:string;\n    damBreedId:number;\n    sireBreed:string;\n    sireBreedId:number;\n    CHBPP:String;\n    animalBreedType:number;\n    animalExotic:number;\n}\n"],"sourceRoot":"webpack:///"}